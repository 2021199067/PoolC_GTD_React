import { Todo } from './interfaces/Todo';
import { Event } from './interfaces/Event';
import { Project } from './interfaces/Project';


const events: Event[] = [
  {
    id:4,
    title: 'Meet John',
    type: 'event',
    startDate: new Date('February 3, 2024 12:00:00'),
  },
  {
    id:5,
    title: 'PoolC Meeting',
    type: 'event',
    startDate: new Date('February 1, 2024 20:00:00'),
  }
];

const todos: Todo[] = [
  {
      id: 1,
      title: '할일1(date설정today)',
      type: 'todo',
      dueDate: new Date(),
  },
  {
      id: 2,
      title: '할일2(date설정o)',
      type: 'todo',
      dueDate: new Date('February 3, 2024 23:15:30'),
      startDate: new Date('February 2, 2024 00:00:00'),
      endDate: new Date('February 3, 2024 23:00:00'),
  },
  {
      id: 3,
      title: '할일3(date설정x)',
      type: 'todo',
  }
];

const projectsData: Project[] = [{
  id: 1,
  name: 'Personal',
  type: 'project',
  hex: '#f18bda',
  items: [
    {
      type: 'todo',
      id: 101,
      title: 'todo예시',
      startDate: new Date(),
      endDate: new Date(),
    } as Todo,
    {
      type: 'memo',
      id: 102,
      title: 'memo(temp)예시',
    } as Memo,
    {
      type: 'event',
      id: 103,
      title: 'event예시',
      place: '장소장소',
    } as Event,
  ],
} as Project, {
  id: 2,
  name: 'Work',
  hex: '#2ecc71',
  type: 'project',
  items: [
    {
      type: 'todo',
      id: 201,
      title: 'todo예시',
      startDate: new Date(),
      endDate: new Date(),
    } as Todo,
    {
      type: 'memo',
      id: 202,
      title: 'temp(memo)예시',
    } as Memo,
    {
      type: 'event',
      id: 203,
      title: 'event예시',
      place: '장소',
    } as Event,
    {
      id: 100,
      name: 'dummy',
      hex: '#1278db',
      type: 'project',
      items: [
        {
          type: 'todo',
          id: 9,
          title: 'todo예시',
          startDate: new Date(),
          endDate: new Date(),
        } as Todo,
        {
          type: 'memo',
          id: 8,
          title: 'temp(memo)예시',
        } as Memo,
        {
          type: 'event',
          id: 7,
          title: 'event예시',
          place: '장소',
        } as Event,
      ],
    }
  ],
}as Project];
  


todos.map(async (todo) => {
  await addData('todo-list', todo);
});

events.map(async (event) => {
  await addData('event-list', event);
});

projectsData.map(async (project) => {
  await addData('project-folders', project);
});